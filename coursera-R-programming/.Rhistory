for (i in MSFTshr) {print (i)}
for (i in MSFTshr[,1]) {print (i)}
s.date <- "2011-09-01"
getSymbols("MSFT", from = s.date)    #     head(dat)
library(quantmod)
getSymbols("MSFT", from = s.date)    #     head(dat)
getSymbols("ORCL", from = s.date)
dat <- cbind(ORCL[,6], MSFT[,6])
names(dat) <- c("ORCL", "MSFT")
dat <- cbind(ORCL[,6], MSFT[,6], 0, 0)
names(dat) <- c("ORCL", "MSFT", "ORCL.shr", "MSFT.shr")
head(dat)
for (i in MSFTshr[,1]) {
for (j in index(MSFT)){
if (i <= j) {dat[j,4] <- MSFTshr[i,2]}
}
}
head(dat)
head(MSFTshr)
MSFTshr[1,2]
i
j
index(MSFT0) == 16680
index(MSFT) == 16680
i
j
MSFT[which(index(MSFT) == 16680),]
as.Date(16680)
as.numeric("2007-06-30")
index(MSFT[1,])
as.Date(16679)
for (i in MSFTshr[,1]) {
print (i)
print(as.Date(i))
}
z <- c()
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i ==as.Date(j)) {z <- c(z, 1)}
}
}
z
MSFTshr
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i ==as.Date(j)) {print (i)}
}
}
z <- c()
z <- c()
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i <= as.Date(j)) {z <- c(z, MSFTshr[i,2])}
}
}
sum(Z)
sum(z)
summary(z)
z <- c()
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i <= as.Date(j)) {z <- c(z, 1)}
}
}
MSFT[1,2]
z <- c()
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i <= as.Date(j)) {z <- c(z, MSFTshr[i,2])}
}
}
i
MSFTshr[index(i),2]
z <- c()
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i <= as.Date(j)) {z <- c(z, MSFTshr[index(i),2])}
}
}
length(z)
dim(MSFT)
j
MSFT[j,]
MSFT[index(j),]
head(Dat)
head(dat)
z <- c()
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i <= as.Date(j)) {dat[index(j),4] <- MSFTshr[index(i),2])}
}
}
for (i in MSFTshr[,1]) {
for (j in index(MSFT)) {
if (i <= as.Date(j)) {dat[index(j),4] <- MSFTshr[index(i),2]}
}
}
head(dat)
summary(dat$MSFT.shr)
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (i <= as.Date(j)) {dat[index(j),4] <- comment(MSFTshr[index(i),2]) 4}
}
}
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (i <= as.Date(j)) {dat[index(j),4] <- comment(MSFTshr[index(i),2]) 4}
}
}
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (i <= as.Date(j)) {dat[index(j),4] <- MSFTshr[index(i),2] 4}
}
}
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (i <= as.Date(j)) {dat[index(j),4] <- MSFTshr[index(i),2] 4}
}
}
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (i <= as.Date(j)) {dat[index(j),4] <- 4}
}
}
head(dat)
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (i >= as.Date(j)) {dat[index(j),4] <- 4}
}
}
head(dat)
as.numeric(as.Date(i))
i
as.Date(i)
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[index(j),4] <- 4}
}
}
head(dat)
i
as.numeric(i)
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (as.numeric(as.Date(i)) <= as.numeric(as.Date(j))) {dat[index(j),4] <- 4}
}
}
head(dat)
sum(dat$MSFT.shr)
for (j in index(dat)) {
if (as.numeric(as.Date(i)) >= as.numeric(as.Date(j))) {dat[index(j),4] <- 4}
}
}
head(dat)
i
j
class(i)
class(j)
as.Date(i)
as.Date(i) > as.Date("2007-07-01")
as.Date(i) > as.Date("2007-05-01")
j
as.Date(j)
as.Date(i) > as.Date(j)
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {print 1}
}
}
for (i in MSFTshr[,1]) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {print (1)}
}
}
head(dat)
index(i)
i
MSFTshr
i
for (i in rev(MSFTshr[,1])) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[j,4] <- MSFTshr[inde]}
}
}
head(dat)
for (i in rev(MSFTshr[,1])) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[j,4] <- MSFTshr[i,2]}
}
}
rev(MSFTshr)
MSFTshr
sort(MSFTshr, decreasing = T)
sort(MSFTshr[,2], decreasing = T)
MSFTshr
for (i in sort(MSFTshr[,1], decreasing = T)) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[j,4] <- MSFTshr[i,2]}
}
}
I
i
head(dat)
for (i in sort(MSFTshr[,1], decreasing = T)) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[j,4] <- 4}
}
}
head(dat)
j
dat[j,4]
dat[index(j),4]
for (i in sort(MSFTshr[,1], decreasing = T)) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[index(j),4] <- 4}
}
}
head(dat)
i
for (i in rev(MSFTshr[,2])) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[index(j),4] <- 4}
}
}
head(dat)
sum(dat[,4])
i
for (i in rev(MSFTshr[,1])) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[index(j),4] <- 4}
}
}
head(dat)
sum(dat[,4])
MSFTshr
head(dat)
as.Date(i)
as.Date(j)
as.Date(i) <= as.Date(j)
index(j)
j
dat[j,4]
index(index(as.Date(j)),4)
dat[which(index == as.Date(j)),4]
j
as.Date(j)
dat[which(as.Date(index) == as.Date(j),4]
dat[which(as.Date(index) == as.Date(j)),4]
dat[which(as.Date(index(dat)) == as.Date(j)),4]
dat[which(index(dat) == j,4]
dat[which(index(dat) == j),4]
i
MSFTshr[i,4]
MSFTshr[which(MSFTshr[,1] == i,4]
MSFTshr[which(MSFTshr[,1] == i),4]
for (i in rev(MSFTshr[,1])) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[which(index(dat) == j),4] <- MSFTshr[which(MSFTshr[,1] == i), 2]}
}
}
head(dat)
for (i in rev(ORCLshr[,1])) {
for (j in index(dat)) {
if (as.Date(i) <= as.Date(j)) {dat[which(index(dat) == j),3] <- ORCLshr[which(ORCLshr[,1] == i), 2]}
}
}
head(dat)
dat$ORCL.mktc <- dat$ORCL.shr*dat$ORCL
dat$MSFT.mktc <- dat$MSFT.shr*dat$MSFT
head(dat)
plot.ts(dat$MSFT.mktc)
plot.ts(dat$MSFT.mktc)
par(new = T)
plot.ts(dat$ORCL.mktc, ann = F, axes = F)
dat$ORCL.not <- dat$ORCL.shr*dat$ORCL
dat$MSFT.not <- dat$MSFT.shr*dat$MSFT
head(dat)
dat <- dat[-c(5,6)]
head(dat)
dat <- dat[,-c(5,6)]
head(dat)
plot.ts(dat$MSFT.mktc)
par(new = T)
plot.ts(dat$ORCL.mktc, col = 'blue')
plot.ts(dat$MSFT.not)
par(new = T)
plot.ts(dat$ORCL.not, col = 'blue')
plot.ts(dat$MSFT.not)
par(new = T)
plot.ts(dat$ORCL.not, axes = F, ann = F, col = 'blue')
plot.ts(dat$MSFT.not, ann = F)
par(new = T)
plot.ts(dat$ORCL.not, axes = F, ann = F, col = 'blue')
dat$ORCL.not <- dat$ORCL.shr*dat$ORCL/(10^11)
dat$MSFT.not <- dat$MSFT.shr*dat$MSFT/(10^11)
plot.ts(dat$MSFT.not, ann = F)
par(new = T)
plot.ts(dat$ORCL.not, axes = F, ann = F, col = 'blue')
fit.not <- lm(dat$MSFT.not ~ dat$ORCL.not)
fit.not
spread.not <- dat$MSFT.not - dat$ORCL.not*fit.not$residuas[2]
fit.not$residuals[2]
fit.not$residuals
fit.not$coefficients[2]
spread.not <- dat$MSFT.not - dat$ORCL.not*fit.not$coefficients[2]
plot.ts(spread.not)
HoltWinters(spread.not)
head(spread.not)
fit.not <- lm(dat$ORCL.not ~dat$MSFT.not )
spread.not <- dat$ORCL.not - dat$MSFT.not*fit.not$coefficients[2]
plot.ts(spread.not)
HoltWinters(spread.not, beta = F, gamma = F)
HoltWinters(spread.not)
spread.not.comp <- decompose(spread.not)
fit.not
library(ggplot)
library(ggplot2)
ggplot(spread.not)
head(spread.not)
ggplot(spread.not, aex(x = datetime))
ggplot(spread.not, aes(x = datetime))
ggplot(spread.not, aes())
chart_Series(spread.not)
last(spread.not)
getSymbols("^GSPC", from = s.date)
par(new = T)
head(GSPC)
par(new = T)
chart_Series(GSPC[,6], axes = F, ann = F, col = 'blue')
dat$ORCL.not <- dat$ORCL.shr*dat$ORCL
dat$MSFT.not <- dat$MSFT.shr*dat$MSFT
fit.not <- lm(dat$ORCL.not ~dat$MSFT.not )
spread.not <- dat$ORCL.not - dat$MSFT.not*fit.not$coefficients[2]
plot.ts(spread.not)
chart_Series(spread.not)
par(new = T)
chart_Series(GSPC[,6], axes = F, ann = F, col = 'blue')
chart_Series(spread.not)
fit.not$coefficients
head(dat)
spread <- dat$ORCL - dat$MSFT*fit.not$coefficients[2]
chart_Series(spread)
fit.not
par(new = T)
chart_Series(ORCL[,6], axes = F, ann = F, col = 'blue')
chart_Series(spread.not)
chart_Series(spread)
par(new = T)
chart_Series(ORCL[,6], axes = F, ann = F, theme = 'blue')
chart_theme()
par(new = T)
chart_Series(ORCL[,6], axes = F, ann = F, theme = chart_theme(col$line.col = 'blue'))
outTheme <- charttheme()
outTheme <- chart_theme()
outTheme$col$line.col = 'blue'
chart_Series(spread)
par(new = T)
chart_Series(ORCL[,6], axes = F, ann = F, theme = myTheme)
chart_Series(spread)
chart_Series(ORCL[,6],theme = myTheme)
par(new = T)
chart_Series(ORCL[,6],theme = outTheme)
vector(numeric, 4)
x <- vector(numeric, 4)
x <- vector("numeric", 4)
x
x <- vector("character", 4)
x <- vector("logical", 4)
x
1/0
0/0
x <- list( 2, "a", "b", T)
X[[2]]
x[[2]]
x <- 1:4
y <- 2:3
x+y
hw1 <- read.csv("hw1_data.csv")
head(hw1)
dimnames(hw1)
colnames(hw1)
hw1[1:2,]
dim(hw1)
hw1[152:153,]
hw1$Ozone[47]
hw1$Ozone
naO <- is.na(hw1$Ozone)
dim(naO)
is.na(hw1$Ozone)
naO<- is.na(hw1$Ozone)
dim(naO)
length(naO)
sum(is.na(hw1$Ozone))
good <- hw1[!is.na(hw1$Ozone)]
good <- hw1[!is.na(hw1$Ozone)]
head(hw1)
good <- hw1[!is.na(hw1$Ozone),]
mean(good)
summary(good)
summary(good$Ozone)
mean(good$Ozone)
better <- good$Ozone[good$Ozone >31 & good$Temp > 90,]
better <- hw1[complete.cases(hw1$Ozone, hw1$Temp),]
test <- better[ better$Ozone > 31 & better$Temp > 90, ]
mean(test$Solar.R)
test <- better[better$Month == 6,]
mean(test)
mean(test$Temp)
better <- hw1[hw1$Month == 6,]
mean(better$Temp)
better <- hw1[hw1$Month == 5,]
max(better$Ozone)
summary(better$Ozone)
head(eurexp1.csv)
file.edit("eurexp.R")
exp1 <- read.csv("eurexp1.csv")
exp2 <- read.csv("eurexp2.csv")
head(exp1)
head(exp1)
getwd()
exp1 <- read.csv("eurexp1.csv", header = T)
exp1 <- read.csv("expeur1.csv")
exp2 <- read.csv("expeur2.csv")
head(exp1)
mapply(rnorm, 1:5, 1:5, MoreArgs = list(sd = 2))
mapply(rnorm, 1:5, 1:5, MoreArgs = list(sd = 2), SIMPLIFY = T)
getwd()
setwd("./Coursera-R-programming")
getwd()
file.edit("assignment2.R")
makeVector <- function( x = numeric()) {
m <- NULL
set <- function (y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list ( set = set, get = get, setmean = setmean, getmean = getmean)
}
makeVector(3)
makeVector$get
makeVector(1:5)
t <- makeVector(1:10)
T
t
t$get()
t$set()
t$getmean()
t$setmean()
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(solve) inv <<- solve
getinv <- function() inv
list ( set = set, get = get, setinv = setinv, getinv= getinv)
}
cacheSolve <- function(x, ...) {
inv <- x$getinv()
if (!is.null(inv)) {
message("getting cached inverse")
return(inv)
}
data <- x$get
inv <- solve(data)
x$setinv(inv)
inv
}
library(datasets)
data(iris)
?iris
head(iris)
head(iris)
apply(iris, 2, mean)
apply(iris, 2, mean, na.rm = T)
apply(iris, 1, mean, na.rm = T)
apply(iris, 2, mean, na.rm = T)
type(iris[,1])
class(iris[,1])
class(iris)
tapply(iris$Sepal.Length, iri$Species == "virginica", mean)
tapply(iris$Sepal.Length, iris$Species == "virginica", mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 2, mean, na.rm = T)
apply(iris[, 1:4], 1, mean, na.rm = T)
data(mtcars)
head(mtcars)
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
with(iris, tapply(Sepal.Length, Species, mean))
x <- with(mtcars, tapply(mpg, cyl, mean))
x
x$4 - x$8
class(x)
x[1] - x[3]
debug(ls)
ls()
with()
quit
qtui
quit()
sd
d
f
c

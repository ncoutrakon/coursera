format("12  6  2015", "%m  %d  %Y")
getwd()
load("~/r/bre/testing/ARIMA_TED.Rdata.RData")
rug(1:10)
head(mtcars)
hist(subset(mtcars, cyl == 6)$mpg)
plot(subset(mtcars, cyl == 6)$mpg)
library(ggplot2)
qplot(hp, wt, facets=vs ~ am)
qplot(hp, wt, data <- mtcars, facets=vs ~ am)
qplot(hp, wt, data = mtcars, facets=vs ~ am)
table(mtcars$vs)
qplot(hp, wt, data = mtcars, facets=am)
qplot(hp, wt, data = mtcars, facets= am)
qplot(hp, wt, data = mtcars, facets= vs)
qplot(hp, wt, data = mtcars, facets= vs ~ am)
qplot(hp, wt, data = mtcars, facets= vs ~ vs)
qplot(hp, wt, data = mtcars, facets= ~ vs)
qplot(hp, wt, data = mtcars, facets= am ~ vs ~ gear)
plot(mpg, hp, mtcars)
boxplot(mpg, hp, mtcars)
plot(mpg ~ hp, mtcars)
boxplot(mpg ~ hp, mtcars)
boxplot(mpg ~ gear, mtcars)
plot(mpg ~ gear, mtcars)
example(points)
if(!file.exists(stfile)) download.file(sturl, stfile, method = "curl")
library(ggplot2)
setwd("./coursera-reproducible-research")
getwd()
sturl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
stfile <- "stormdata.csv"
if(!file.exists(stfile)) download.file(sturl, stfile, method = "curl")
if(!file.exists(stfile)) download.file(sturl, stfile, method = "curl"), stormdownloadDate<- date()
if(!file.exists(stfile)) download.file(sturl, stfile, method = "curl") stormdownloadDate<- date()
if(!file.exists(stfile)) download.file(sturl, stfile, method = "curl"); stormdownloadDate<- date()
if(!file.exists(stfile)) {download.file(sturl, stfile, method = "curl"); stormdownloadDate<- date()}
setwd("./coursera-reproducible-research")
sturl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
stfile <- "stormdata.csv"
if(!file.exists(stfile)) {download.file(sturl, stfile, method = "curl"); stormdownloadDate<- date()}
stormdf <- read.csv(stfile, stringsAsFactors = F, na.strings = "")
exists(stormdf)
exist(stormdf)
exists("stormdf")
if(!exists("stormdf")) stormdf <- read.csv(stfile, stringsAsFactors = F, na.strings = "")
dim(stormdf)
stormdf$posixtime <- strptime(stormdf[,2], "%m/%d/%Y %H:%M:%S")
stormdf$year <- as.numeric(format(stormdf$posixtime, "%Y"))
freqEVTYPE <- setNames(aggregate(stormdf$EVTYPE, list(stormdf$year), function(x) length(table(x))), c("Year", "Types"))
freqEVTYPE
qplot(Year, Types, data = freqEVTYPE)
freqEVTYPE[which(freqEVTYPE$Types > 10)[1],]
freqyear <- setNames(as.data.frame(table(stormdf$year)), c("Year", "Events"))
freqyear
freqdf <- merge(freqyear, freqEVTYPE, by = "Year")
qlot(Year, Events, data = freqdf)
qplot(Year, Events, data = freqdf)
qplot(Year, Events, data = freqdf) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
freqdf
stormdf <- stormdf[which(stormdf$year > 2007),]
redstorm <- stormdf[which(stormdf$year > 2007),]
rstormdf <- stormdf[which(stormdf$year > 2007),]
multiplier <- c("0" = 1, K = 10^3, M = 10^6, B = 10^9)
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
rstormdf$cropmult <-multiplier[rstormdf$CROPDMGEXP]
rstormdf$propmult <-multiplier[rstormdf$PROPDMGEXP]
rstormdf$damage <- rstormdf$CROPDMG * rstormdf$cropmult + rstormdf$PROPDMG * rstormdf$propmult
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg
qplot(Event, Damage, data = econdmg)
class(econdmg[,2])
econdmg$Damage <- transform(econdmg, Damage = reorder(Damage, Damage))
qplot(Event, Damage, data = econdmg)
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- transform(econdmg, Damage = reorder(Damage, Damage))
qplot(Event, Damage, data = econdmg)
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
qplot(Event, Damage, data = econdmg)
econdmg
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- transform(econdmg, Damage = reorder(Event, Damage))
qplot(Event, Damage, data = econdmg)
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
qplot(x = reorder(Event, Damage), Damage, data = econdmg)
head(econdmg)
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
qplot(x = reorder(Event, Damage), Damage, data = econdmg)
qplot(x = reorder(Event, Damage), Damage, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
econdmg <- transform(econdmg, reorder(Event, Damage))
qplot(Event, Damage, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
qplot(Event, Damage, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(econdmg)
recondmg <- econdmg[which(econdmg$Damage > 2.5*10^9),]
recondmg
head(rstormdf)
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Events = reorder(Events, Damage))
qplot(Event, Damage, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
qplot(Event, Damage, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
evfatal <- setNames(aggregate(rstormdf$FATALITIES, list(rstormdf$EVTYPE), sum), c("Event", "Fatalities"))
evinj <- setNames(aggregate(rstormdf$INJURIES, list(rstormdf$EVTYPE), sum), c("Event", "Injuries"))
popdmg <- merge(eventfat, eventinj)
popdmg <- merge(evfatal, evinj)
popdmg <- popdmg[order(popdmg$eDMG, decreasing = T),]
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
popdmg$evDMG <- popdmg$Fatalities + .6*popdmg$Injuries
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
head(popdmg)
qplot(Event, evDMG, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(Event, evDMG, data = popdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
popdmg <- transform(popdmg, Event = reorder(Event, evDMG))
qplot(Event, evDMG, data = popdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outpopdmg <- popdmg[popdmg$Event != "TORNADO",]
qplot(Event, evDMG, data = outpopdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
rpopdmg <- popdmg[which(popdmg$evDMG > 200),]
rpopdmg
merge(rpopdmg,recondmg)
comdodf <- merge(rpopdmg,recondmg)
library(reshape)
?melt()
combodmg <- melt(combodf, id.vars = Event, measure.vars = c("evDMG", "Damage"))
comdodf <- merge(rpopdmg,recondmg)
combodmg <- melt(combodf, id.vars = Event, measure.vars = c("evDMG", "Damage"))
combdodf <- merge(rpopdmg,recondmg)
combodmg <- melt(combodf, id.vars = Event, measure.vars = c("evDMG", "Damage"))
combodf <- merge(rpopdmg,recondmg)
combodmg <- melt(combodf, id.vars = Event, measure.vars = c("evDMG", "Damage"))
combodmg <- melt(combodf, id.vars = "Event", measure.vars = c("evDMG", "Damage"))
qplot(combodmg)
combodmg
qplot(combodmg$Event, combodmg$value, colour - combodmg$variable)
rpopdmg
recondmg
library(ggplot2)
library(reshape)
setwd("./coursera-reproducible-research")
#DOWNLOAD DATA
sturl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
stfile <- "stormdata.csv"
if(!file.exists(stfile)) {download.file(sturl, stfile, method = "curl"); stormdownloadDate<- date()}
if(!exists("stormdf")) stormdf <- read.csv(stfile, stringsAsFactors = F, na.strings = "")
##PREPROCESSING
stormdf$posixtime <- strptime(stormdf[,2], "%m/%d/%Y %H:%M:%S")
stormdf$year <- as.numeric(format(stormdf$posixtime, "%Y"))
#number of Event Types per year, plot it
freqEVTYPE <- setNames(aggregate(stormdf$EVTYPE, list(stormdf$year), function(x) length(table(x))), c("Year", "Types"))
qplot(Year, Types, data = freqEVTYPE)
#how many events were reported in total, each year. plot it
freqyear <- setNames(as.data.frame(table(stormdf$year)), c("Year", "Events"))
freq <- merge(freqyear, freqEVTYPE, by = "Year")
qplot(Year, Events, data = freq) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Between 1993 and 2002
#the different types of events reported ranges from 100 to 400. A further eploration of
#these events tells us that this varying amount can be attributed to lack of consolidation
#and direction in the data entry process. After 2007, we see the number of event types
#reported is much more consistent which is in line with when the NWS consolidated the standards
#many of itsreporting branches.
#So for this analysis, we are only going to use the data after this consolidation.
rstormdf <- stormdf[which(stormdf$year > 2007),]
##ECONOMIC DAMAGES
#create numeric number with total damages for each event
multiplier <- c("0" = 1, K = 10^3, M = 10^6, B = 10^9)
rstormdf$cropmult <-multiplier[rstormdf$CROPDMGEXP]
rstormdf$propmult <-multiplier[rstormdf$PROPDMGEXP]
rstormdf$damage <- rstormdf$CROPDMG * rstormdf$cropmult + rstormdf$PROPDMG * rstormdf$propmult
#creates df for total economic damages by event
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
qplot(Event, Damage, data = econdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#In this case, it looks like the top7 events and we will include only that as part of our
#economic damages recommendation. Right around2.5*10^9
recondmg <- econdmg[which(econdmg$Damage > 2.5*10^9),]
##POPULATION HEALTH
#creates  df for total fatalities and injuries by event
#arbitrarily chose to weight Injuries by .6 so as a way to compare fatalities and injuries
#in another analysis, this number could be changed
evfatal <- setNames(aggregate(rstormdf$FATALITIES, list(rstormdf$EVTYPE), sum), c("Event", "Fatalities"))
evinj <- setNames(aggregate(rstormdf$INJURIES, list(rstormdf$EVTYPE), sum), c("Event", "Injuries"))
popdmg <- merge(evfatal, evinj)
popdmg$evDMG <- popdmg$Fatalities + .6*popdmg$Injuries
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
popdmg <- transform(popdmg, Event = reorder(Event, evDMG))
qplot(Event, evDMG, data = popdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Clearly Tornadoes cause the most damage to population health, but lets remove that as an outlier
#and take a look at the data from here
outpopdmg <- popdmg[popdmg$Event != "TORNADO",]
qplot(Event, evDMG, data = outpopdmg)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Based on this, its seems like 200 in evDMG is a good cutoff point.
#Lets remove everything else and use only those points as part of our recommendation,
#including Tornadoes of course
rpopdmg <- popdmg[which(popdmg$evDMG > 200),]
combodf <- merge(rpopdmg,recondmg)
library(ggplot2)
library(reshape)
setwd("./coursera-reproducible-research")
#DOWNLOAD DATA
sturl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
stfile <- "stormdata.csv"
if(!file.exists(stfile)) {download.file(sturl, stfile, method = "curl"); stormdownloadDate<- date()}
if(!exists("stormdf")) stormdf <- read.csv(stfile, stringsAsFactors = F, na.strings = "")
##PREPROCESSING
stormdf$posixtime <- strptime(stormdf[,2], "%m/%d/%Y %H:%M:%S")
stormdf$year <- as.numeric(format(stormdf$posixtime, "%Y"))
#number of Event Types per year, plot it
freqEVTYPE <- setNames(aggregate(stormdf$EVTYPE, list(stormdf$year), function(x) length(table(x))), c("Year", "Types"))
qplot(Year, Types, data = freqEVTYPE, main = "Types of Events each Year")
#how many events were reported in total, each year. plot it
freqyear <- setNames(as.data.frame(table(stormdf$year)), c("Year", "Events"))
freq <- merge(freqyear, freqEVTYPE, by = "Year")
qplot(Year, Events, data = freq, main = "Number of Events each Year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Between 1993 and 2002
#the different types of events reported ranges from 100 to 400. A further eploration of
#these events tells us that this varying amount can be attributed to lack of consolidation
#and direction in the data entry process. After 2007, we see the number of event types
#reported is much more consistent which is in line with when the NWS consolidated the standards
#many of itsreporting branches.
#So for this analysis, we are only going to use the data after this consolidation.
rstormdf <- stormdf[which(stormdf$year > 2007),]
##ECONOMIC DAMAGES
#create numeric number with total damages for each event
multiplier <- c("0" = 1, K = 10^3, M = 10^6, B = 10^9)
rstormdf$cropmult <-multiplier[rstormdf$CROPDMGEXP]
rstormdf$propmult <-multiplier[rstormdf$PROPDMGEXP]
rstormdf$damage <- rstormdf$CROPDMG * rstormdf$cropmult + rstormdf$PROPDMG * rstormdf$propmult
#creates df for total economic damages by event
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
qplot(Event, Damage, data = econdmg, main = "Total Crop and Property Damage by Event")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#In this case, it looks like the top7 events and we will include only that as part of our
#economic damages recommendation. Right around2.5*10^9
recondmg <- econdmg[which(econdmg$Damage > 2.5*10^9),]
##POPULATION HEALTH
#creates  df for total fatalities and injuries by event
#arbitrarily chose to weight Injuries by .6 so as a way to compare fatalities and injuries
#in another analysis, this number could be changed
evfatal <- setNames(aggregate(rstormdf$FATALITIES, list(rstormdf$EVTYPE), sum), c("Event", "Fatalities"))
evinj <- setNames(aggregate(rstormdf$INJURIES, list(rstormdf$EVTYPE), sum), c("Event", "Injuries"))
popdmg <- merge(evfatal, evinj)
popdmg$evDMG <- popdmg$Fatalities + .6*popdmg$Injuries
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
popdmg <- transform(popdmg, Event = reorder(Event, evDMG))
qplot(Event, evDMG, data = popdmg, ylab = "Estimated Damage", main = "Weighted Total of Fatalities and Injuries")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Clearly Tornadoes cause the most damage to population health, but lets remove that as an outlier
#and take a look at the data from here
outpopdmg <- popdmg[popdmg$Event != "TORNADO",]
qplot(Event, evDMG, data = outpopdmg, ylab = "Estimated Damage", main = "Weighted Total of Fatalities and Injuries (Tornadoes Removed)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Based on this, its seems like 200 in evDMG is a good cutoff point.
#Lets remove everything else and use only those points as part of our recommendation,
#including Tornadoes of course
rpopdmg <- popdmg[which(popdmg$evDMG > 200),]
combodf <- merge(rpopdmg,recondmg)
class(freq$Year)
class(freqEVTYPE$Year)
class(freqyear$Year)
x <- aggregate(stormdf$year)
x <- aggregate(stormdf$year, sum)
x <- count(stormdf$year)
x <- table(stormdf$year)
x
class(x)
as.vector(class(x))
as.vector(x)
as.numeric(freq$Year)
as.Date(freq$Year)
class(freq$Year)
freq$Year
freqyear
class(freqyear$Year)
x <- freqyear$Year
as.Date(x)
as.Date(x, "%Y")
freqEVTYPE
class(freqEVTYPE$Year)
as.numeric(x)
freqyear <- setNames(as.data.frame(table(stormdf$year, stringsAsFactors = F)), c("Year", "Events"))
freqyear <- setNames(as.data.frame(table(stormdf$year)), c("Year", "Events"))
freqyear
freqEVTYPE
x
x <- table(stormdf$year)
class(x)
as.data.frame(x)
y <- as.data.frame(x)
class(y$year)
class(y[,1])
freqyear <- setNames(as.data.frame(table(stormdf$year), sstringsAsFactors = F), c("Year", "Events"))
freq <- merge(freqyear, freqEVTYPE, by = "Year")
freq
class(freq$Year)
freqyear <- setNames(as.data.frame(table(stormdf$year), stringsAsFactors = F), c("Year", "Events"))
freq <- merge(freqyear, freqEVTYPE, by = "Year")
class(freq$Year)
qplot(Year, Events, data = freq, ylab = "Number of Events", main = "Total Events Reported") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
freqyear <- setNames(as.data.frame(table(stormdf$year), stringsAsFactors = F), c("Year", "Events"))
freq <- merge(freqyear, freqEVTYPE, by = "Year")
freq$Year <- as.numeric(freq$Year)
qplot(Year, Events, data = freq, ylab = "Number of Events", main = "Total Events Reported") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
combodf
recondmg
repopdmg
rpopdmg
freqEVTYPE
x <- table(rstormdf$EVTYPE)
x
nEVTYPES <- table(rstormdf$EVTYPE)
class(nEVTYPES)
nEVTYPES <- as.data.frame(table(rstormdf$EVTYPE), stringsAsFactors = F)
nEVTYPES
nEVTYPES <- setNames(as.data.frame(table(rstormdf$EVTYPE), stringsAsFactors = F),c("Event", "Count")
)
nEVTYPES <- nEVTYPES[order(nEVTYPES$Count),]
head(nEVTYPES)
nEVTYPES <- nEVTYPES[order(nEVTYPES$Count, decreasing = T),]
head(nEVTYPES)
head(econdmg)
econdmg
merge(econdmg, nEVTYPES)
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- merge(econdmg, nEVTYPES)
econdmg$DMGper <- econdmg$Damage / econdmg$Count
econdmg <- econdmg[order(econdmg$DMGper, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, DMGper))
qplot(Event, DMGper, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
recondmg
qplot(Event, Damage, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(Event, Damage, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
qplot(Event, Damage, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(Event, DMGper, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(x = reorder(Event, DMGper), DMGper, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
recondmg <- econdmg[which((econdmg$Damage > 2.5*10^9) | econdmg$Event %in% c("TSUNAMI", "STORM SURGE/TIDE") ,]
recondmg <- econdmg[which((econdmg$Damage > 2.5*10^9)|(econdmg$Event %in% c("TSUNAMI", "STORM SURGE/TIDE")),]
recondmg <- econdmg[which((econdmg$Damage > 2.5*10^9)|(econdmg$Event %in% c("TSUNAMI", "STORM SURGE/TIDE"))),]
recondmg
popdmg <- merge(evfatal, evinj)
popdmg <- merge(popdmg, nEVTYPES)
popdmg
nEVTYPES <- setNames(as.data.frame(table(rstormdf$EVTYPE), stringsAsFactors = F),c("Event", "Event Count"))
nEVTYPES <- nEVTYPES[order(nEVTYPES$Count, decreasing = T),]
nEVTYPES <- nEVTYPES[order(nEVTYPES$'Event Count', decreasing = T),]
popdmg <- merge(popdmg, nEVTYPES)
popdmg$evDMG <- popdmg$Fatalities + .6*popdmg$Injuries
popdmg$evDMGper <- popdmg$evDMG / popdmg$'Event Count'
popdmg
popdmg$evDMGper <- popdmg$evDMG / popdmg$'Event Count'*100
popdmg
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
popdmg <- transform(popdmg, Event = reorder(Event, evDMG))
qplot(Event, evDMG, data = popdmg, ylab = "Estimated Damage", main = "Weighted Total of Fatalities and Injuries")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
outpopdmg <- popdmg[popdmg$Event != "TORNADO",]
qplot(Event, evDMG, data = outpopdmg, ylab = "Estimated Damage", main = "Weighted Total of Fatalities and Injuries (Tornados Removed)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(x = reorder(Event, evDMGper), evDMGper, data = outpopdmg, ylab = "Estimated Damage per Event", main = "Weighted Total of Fatalities and Injuries per Event (Tornados Removed)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
rpopdmg
rpopdmg <- popdmg[which((popdmg$evDMG > 200)| (popdmg$Event %in% c('TSUNAMI', "AVALANCHE"))),]
combodf <- merge(rpopdmg,recondmg)
combodf
econdmg <- merge(econdmg, nEVTYPES)
econdmg$DMGper <- econdmg$Damage / econdmg$'Event Count'
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
recondmg <- econdmg[which((econdmg$Damage > 2.5*10^9)|(econdmg$Event %in% c("TSUNAMI", "STORM SURGE/TIDE"))),]
combodf <- merge(rpopdmg,recondmg)
combodf
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage"))
econdmg <- merge(econdmg, nEVTYPES)
econdmg$DMGper <- econdmg$Damage / econdmg$'Event Count'
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
recondmg <- econdmg[which((econdmg$Damage > 2.5*10^9)|(econdmg$Event %in% c("TSUNAMI", "STORM SURGE/TIDE"))),]
combodf <- merge(rpopdmg,recondmg)
combodf
popdmg <- merge(evfatal, evinj)
popdmg <- merge(popdmg, nEVTYPES)
popdmg$evDMG <- popdmg$Fatalities + .6*popdmg$Injuries
popdmg$evDMGper <- popdmg$evDMG / popdmg$'Event Count'*100
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
popdmg <- transform(popdmg, Event = reorder(Event, evDMG))
rpopdmg <- popdmg[which((popdmg$evDMG > 200)| (popdmg$Event %in% c('TSUNAMI', "AVALANCHE"))),]
combodf <- merge(rpopdmg,recondmg)
combodf
eplot1 <- qplot(Event, Damage, data = econdmg, xlab ="", ylab = "Damage ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
eplot2 <- qplot(x = reorder(Event, DMGper), DMGper, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Average Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
multiplot(eplot1, eplot2, cols = 1)
library("grid", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
multiplot(eplot1, eplot2, cols = 1)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(eplot1, eplot2, ncol = 1)
library(ggplot2)
library(reshape)
library(gridExtra)
setwd("./coursera-reproducible-research")
#DOWNLOAD DATA
sturl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
stfile <- "stormdata.csv"
if(!file.exists(stfile)) {download.file(sturl, stfile, method = "curl"); stormdownloadDate<- date()}
if(!exists("stormdf")) stormdf <- read.csv(stfile, stringsAsFactors = F, na.strings = "")
##PREPROCESSING
stormdf$posixtime <- strptime(stormdf[,2], "%m/%d/%Y %H:%M:%S")
stormdf$year <- as.numeric(format(stormdf$posixtime, "%Y"))
#number of Event Types per year, plot it
freqEVTYPE <- setNames(aggregate(stormdf$EVTYPE, list(stormdf$year), function(x) length(table(x))), c("Year", "Types"))
qplot(Year, Types, data = freqEVTYPE, ylab = "Types of Events", main = "Event Types Reported")
#how many events were reported in total, each year. plot it
freqyear <- setNames(as.data.frame(table(stormdf$year), stringsAsFactors = F), c("Year", "Events"))
freq <- merge(freqyear, freqEVTYPE, by = "Year")
freq$Year <- as.numeric(freq$Year)
qplot(Year, Events, data = freq, ylab = "Number of Events", main = "Total Events Reported") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Between 1993 and 2002
#the different types of events reported ranges from 100 to 400. A further eploration of
#these events tells us that this varying amount can be attributed to lack of consolidation
#and direction in the data entry process. After 2007, we see the number of event types
#reported is much more consistent which is in line with when the NWS consolidated the standards
#many of itsreporting branches.
#So for this analysis, we are only going to use the data after this consolidation.
rstormdf <- stormdf[which(stormdf$year > 2007),]
#consider removing
nEVTYPES <- setNames(as.data.frame(table(rstormdf$EVTYPE), stringsAsFactors = F),c("Event", "Event Count"))
nEVTYPES <- nEVTYPES[order(nEVTYPES$'Event Count', decreasing = T),]
##ECONOMIC DAMAGES
multiplier <- c("0" = 1, K = 10^3, M = 10^6, B = 10^9)
rstormdf$cropmult <-multiplier[rstormdf$CROPDMGEXP]
rstormdf$propmult <-multiplier[rstormdf$PROPDMGEXP]
rstormdf$damage <- rstormdf$CROPDMG * rstormdf$cropmult + rstormdf$PROPDMG * rstormdf$propmult
#creates df for total economic damages by event
econdmg <- setNames(aggregate(rstormdf$damage, list(rstormdf$EVTYPE), sum), c("Event","Damage.USD"))
econdmg <- merge(econdmg, nEVTYPES)
econdmg$DMGper <- econdmg$Damage / econdmg$'Event Count'
econdmg <- econdmg[order(econdmg$Damage, decreasing = T),]
econdmg <- transform(econdmg, Event = reorder(Event, Damage))
eplot1 <- qplot(Event, Damage, data = econdmg, xlab ="", ylab = "Damage ($)", main = "Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
eplot2 <- qplot(x = reorder(Event, DMGper), DMGper, data = econdmg, xlab ="", ylab = "Damage per Event ($)", main = "Average Crop and Property Damage")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(eplot1, eplot2, ncol = 1)
#In this case, it looks like the top7 events and we will include only that as part of our
#economic damages recommendation. Right around2.5*10^9. Also note, that on a per event basis, Tsunamis and Storm Surge/Tides
#can be the most costly
recondmg <- econdmg[which((econdmg$Damage > 2.5*10^9)|(econdmg$Event %in% c("TSUNAMI", "STORM SURGE/TIDE"))),]
##POPULATION HEALTH
#creates  df for total fatalities and injuries by event
#arbitrarily chose to weight Injuries by .6 so as a way to compare fatalities and injuries
#in another analysis, this number could be changed
evfatal <- setNames(aggregate(rstormdf$FATALITIES, list(rstormdf$EVTYPE), sum), c("Event", "Fatalities"))
evinj <- setNames(aggregate(rstormdf$INJURIES, list(rstormdf$EVTYPE), sum), c("Event", "Injuries"))
popdmg <- merge(evfatal, evinj)
popdmg <- merge(popdmg, nEVTYPES)
popdmg$evDMG <- popdmg$Fatalities + .6*popdmg$Injuries
popdmg$evDMGper <- popdmg$evDMG / popdmg$'Event Count'*100
popdmg <- popdmg[order(popdmg$evDMG, decreasing = T),]
popdmg <- transform(popdmg, Event = reorder(Event, evDMG))
qplot(Event, evDMG, data = popdmg, ylab = "Estimated Damage", main = "Weighted Total of Fatalities and Injuries")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Clearly Tornadoes cause the most damage to population health, but lets remove that as an outlier
#and take a look at the data from here
outpopdmg <- popdmg[popdmg$Event != "TORNADO",]
pplot1 <- qplot(Event, evDMG, data = outpopdmg, ylab = "Estimated Damage", main = "Weighted Total of Fatalities and Injuries (Tornados Removed)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pplot2 <- qplot(x = reorder(Event, evDMGper), evDMGper, data = outpopdmg, ylab = "Estimated Damage per Event", main = "Weighted Total of Fatalities and Injuries per Event (Tornados Removed)")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(pplot1, pplot2, ncol = 1)
#Again, note that Tsunamis have been underestimated on a per event basis, we'll include them
#Based on this, its seems like 200 in evDMG is a good cutoff point.
#Lets remove everything else and use only those points as part of our recommendation,
#including Tornadoes of course
rpopdmg <- popdmg[which((popdmg$evDMG > 200)| (popdmg$Event %in% c('TSUNAMI', "AVALANCHE"))),]
combodf <- merge(rpopdmg,recondmg)
recondmg
rpopdmg
combodf

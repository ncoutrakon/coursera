hist(sort(table(stormdf$EVTYPE)))
plot(sort(table(stormdf$EVTYPE)))
barplot(sort(table(stormdf$EVTYPE)))
barplot(sort(table(stormdf$EVTYPE)), horiz = F, cex.names = .8)
barplot(sort(table(stormdf$EVTYPE)), cex.names = .5, las = 2)
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 2)
barplot(sort(table(stormdf$EVTYPE)), cex.names = .5, las = 2)
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 2)
table(stormdf$CROPDMGEXP)
table(stormdf$CPROPDMGEXP)
table(stormdf$PROPDMGEXP)
x <- factor(stormdf$PROPDMGEXP, levels = c("0", "K", "M", "B"), labels = c(0, 1000, 1000000, 1000000000))
head(x)
table(stormdf$PROPDMGEXP, useNA = "always")
table(stormdf$PROPDMGEXP, useNA = "ifany")
table(stormdf$CROPDMGEXP, useNA = "ifany")
head(stormdf$CROPDMGEXP)
file.exists(stfile)
stormdf <- read.csv(stfile, stringsAsFactors = F, na.strings = "")
head(stormdf$CROPDMGEXP)
stormdf$posixtime <- strptime(stormdf[,2], "%m/%d/%Y %H:%M:%S")
stormdf$year <- as.numeric(format(stormdf$posixtime, "%Y"))
freqEVTYPE <- tapply(stormdf$EVTYPE, stormdf$year, function(x) length(table(x)))
plot(names(freqEVTYPE), freqEVTYPE, xlab = "Year", ylab =" Frequency",
main = "Number of Event Types per Year")
class(freqEVTYPE)
stormdf <- stormdf[which(stormdf$year > 2002),]
freqyears <- table(stormdf$year)
plot(freqyears, type = "p", xlab = "Year", ylab =" Frequency",
main = "Number of Events per Year")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 2,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 4,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 1,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 3,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 0,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 1,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
barplot(sort(table(stormdf$EVTYPE)), cex.names = .3, las = 2,
ylab = "Frequency", main = "Frequency of Events, 2003-2011")
sort(table(stormdf$EVTYPE))
dmg <- data.frame(sym = c("K", "M", "B"), val = c(1000, 1000000, 1000000000))
class(stormdf$CROPDMGEXP)
factor(stormdf$CROPDMGEXP, levels = c("K", "M", "B"), labels = c(1000, 1000000, 1000000000))
x <- factor(stormdf$CROPDMGEXP, levels = c("K", "M", "B"), labels = c(1000, 1000000, 1000000000))
class(x)
summary(x)
x <- factor(stormdf$CROPDMGEXP, levels = c("K", "M", "B", NA), labels = c(1000, 1000000, 1000000000, 0))
head((X))
head(x
)
y <- factor(stormdf$PROPDMGEXP, levels = c("K", "M", "B"), labels = c(1000, 1000000, 1000000000))
head(y)
y[2]
y[2] == NA
y[2] == <NA.
y[2] == <NA>
Y[1]
y[1]
y[1]*5
mtcars
table(mtcars[1:3])
table(mtcars[1:4])
quantile(rnorm(100))
cut(rnorm(100), 2)
getwd()
list.files()
file.exists("bre")
file.exists("stormdata.csv")
mtcars
mtcars[,1]
rownames(mtcars)
cut(rownames(mtcars))
split(mtcars$mpg, mtcars$cyl)
format("12  6  2015", "%m  %d  %Y")
getwd()
load("~/r/bre/testing/ARIMA_TED.Rdata.RData")
library(quantmod)
getSymbols("^SPY")
getSymbols("SPY")
head(SPY)
getSymbols("^GSPC")
head(GSPC)
GSPC$return <- log((lag(GSPC$GSPC.Close) / lag(GSPC$GSPC.Close, k = 1)))
head(GSPC)
GSPC$return <- log((GSPC$GSPC.Close / lag(GSPC$GSPC.Close, k = 1)))
head(GSPC)
colSums(GSPC$GSPC.Volume)/dim(GSPC)[1]
dim(GSPC)[1]
names(GSPC)
colnames(GSPC)
ES <-GSPC[,c(4, 5, 7)]
colnames(ES) <-c("Price", "Volume", "Return")
head(ES)
table(ES,useNA = "ifany")
head(ES)
colSums(ES$Return)
volmean <- colSums(ES$Volume)/length(ES$Volume)
plot(ES$Volume)
ES$VolReturn <- ES$Volume*ES$Return
head(ES)
plot(ES$VolReturn/volmean)
points(ES$Price)
plot(ES$Price)
mfrow(c(2,1))
par(mfrow = c(2,1))
plot(ES$Price)
plot(ES$VolReturn/volmean)
plot(ES$VolReturn)
sd(ES$Volume)
sd(ES$Volume)/1000000000
plot(ES$Volume)
lm(ES$Return ~ ES$Volume)
fit <- lm(ES$Return ~ ES$Volume)
fit
head(fit)
summary(fit)
plot(fit$residuals)
fit <- lm(ES$Return ~ ES$Volume[-1])
fit <- lm(ES$Return ~ ES$Volume[2:length(ES$Volume)])
head(ES)
ES$VolReturn <- ES$Volume*abs(ES$Return)
head(ES)
ES$VolReturn <- ES$Volume/abs(ES$Return)
head(ES)
head(window(ES, 2010))
head(ES["2010"])
head(ES[index(ES) > 2009])
head(ES[index(ES) > "2009"])
head(ES[index(ES) > as.Date("2009-12-31"])
head(index(ES))
class(index(ES))
as.Date("2009-12-31")
head(ES[index(ES) > as.Date("2009-12-31")])
date()
seq(date(), length = 2, by = "-2 years")
seq(date(), length = 2, by = "-2 years")[2]
class(date())
Sys.Date()
seq(Sys.Date(), length = 2)
seq(Sys.Date(), length = 2, by = "-2 years")
class(Sys.Date())
attr(Sys.Date())
str(Sys.Date())
Sys.Date() + "2 years"
ES5 <- ES[index(ES) > seq(Sys.Date(), length = 2, by = "-5 years")[5]]
head(ES5)
seq(Sys.Date(), length = 2, by = "-5 years")[5]
seq(Sys.Date(), length = 2, by = "-5 years")
ES5 <- ES[index(ES) > seq(Sys.Date(), length = 2, by = "-5 years")[2]]
head(ES5)
seq(Sys.Date(), length = 10, by = "-1 years")
ES5 <- ES[index(ES) > seq(Sys.Date(), length = 10, by = "-1 years")[6]]
head(ES5)
head(ES5)
fit(ES5$Return ~ lag(ES5$VolReturn))
fit(ES5$Return ~ lag(ES5$VolReturn, 1))
lm(ES5$Return ~ lag(ES5$VolReturn, 1))
fit <- lm(ES5$Return ~ lag(ES5$VolReturn, 1))
summary(fit)
getwd()
list.files()
setwd("./coursera-getting-and-cleaning-data")
list.files()
file.edit("quiz4.R")
getwd()
qurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(qurl, destfile = "./q1data.csv")
download.file(qurl, destfile = "./q1data.csv", method = "curl")
doanloadDate <- date()
dat <- read.csv(".q1data.csv")
dat <- read.csv("./q1data.csv")
head(dat)
q1 <- strsplit(colnames(dat), slit= "wgtp")
q1 <- strsplit(colnames(dat), split= "wgtp")
head(q1)
q1[[123]]
unlist(q1)
colnames(dat)
q1 <- strsplit(colnames(dat), split= "wgtp", fixed = T)
unlist(q1)
unlist(q1)[123]
q2url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
q2url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(q2url, destfile = "./q2data.csv", method = "curl")
download2Date <- date()
dat2 <- read.csv("./q2data.csv")
head(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4)
head(dat2)
head(gsub(",", "", dat2$X.4))
head(as.numeric((gsub(",", "", dat2$X.4)))
)
dat2$X.4 <- head(as.numeric((gsub(",", "", dat2$X.4))))
head(dat2$X.4)
options(stringsAsFactors = F)
q2url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(q2url, destfile = "./q2data.csv", method = "curl")
download2Date <- date()
dat2 <- read.csv("./q2data.csv", skip = 4)
head(dat2)
dat2$X.4 <- head(as.numeric((gsub(",", "", dat2$X.4))))
head(dat2$X.4)
class(dat2$X.4)
par(stringsAsFactors)
stringsAsFactors
options("stringsAsFactors = F")
options("stringsAsFactors")
q2url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(q2url, destfile = "./q2data.csv", method = "curl")
download2Date <- date()
dat2 <- read.csv("./q2data.csv", skip = 4)
head(dat2)
dat2$X.4 <- head(as.numeric((gsub(",", "", dat2$X.4))))
head(dat2$X.4)
dat2$X.4 <- as.numeric((gsub(",", "", dat2$X.4)))
head(dat2)
class(dat2)
class(dat2$X.4)
tail(dat2)
x <- complete.cases(dat2)
head(x)
sum(x)
colSums(dat2$X.4)/190
colSum(dat2$X.4)/190
sum(dat2$X.4)/190
dat2 <- dat2[rowsum(is.na(dat2$X.4) == dim(dat2)[2])]
dat2 <- dat2[rowsum(is.na(dat2) == dim(dat2)[2])]
dim(dat2)[2]
dat2 <- dat2[rowsum(is.na(dat2) == dim(dat2)[2]),]
dat2 <- dat2[rowSums(is.na(dat2) == dim(dat2)[2]),]
dat2 <- read.csv("./q2data.csv", skip = 4)
head(dat2)
dat2 <- dat2[rowSums(is.na(dat2) != dim(dat2)[2]),]
head(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4)
head(dat2)
dat2 <- dat2[rowSums(is.na(dat2)) != dim(dat2)[2],]
head(dat2)
tail(dat2)
dim(dat2)[2]
dat2[325]
dat2[325,]
dat2[325,1]
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = "")
head(dat2)
dat2 <- dat2[rowSums(is.na(dat2)) != dim(dat2)[2],]
head(dat2)
tail(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("", "NA"))
dat2 <- dat2[rowSums(is.na(dat2)) != dim(dat2)[2],]
tail(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("", NA))
head(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("", NA, "<NA>"))
head(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("", NA, <NA>))
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = "")
head(dat2)
class(dat2[,6])
class(dat2[,7])
class(dat2[,5])
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("NA", ""))
head(dat2)
dat[1,6]
dat2[1,6]
dat2[1,5]
class(dat2[16])
class(dat2[1,6])
dat[1,6] == "NA"
dat[1,6] == NA
dat[1,6]
dat2[1,6] == "NA"
dat2[1,6]
is.na(dat2[1,6])
is.na(dat2[1,1])
dat2[1,1]
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("NA", "", "NaN", "<NA>"))
head(dat2)
sum(is.na(dat2[1,]))
which(sum(is.na(dat2)) == 10)
tail(dat2)
sum(is.na(dat2[326,]))
which(rowSums(is.na(dat2)) == 10)
dat2[192,]
dat2 <- dat2[which(rowSums(is.na(dat2)) == dim(dat2)[2]),]
dat2 <- dat2[which(rowSums(is.na(dat2)) == 10),]head(dat2)
head(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = c("NA", "", "NaN", "<NA>"))
head(dat2)
dat2 <- dat2[which(rowSums(is.na(dat2)) != dim(dat2)[2]),]
tail(dat2)
sum(is.na(dat2[234,]))
x <- rowSums(is.na(dat2))
summary(x)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = "")
head(dat2)
dat2 <- dat2[which(rowSums(is.na(dat2)) != dim(dat2)[2]),]
tail(dat2)
dat2[235,2]
head(dat2)
dim(dat2)
dat2[1,]
dat2[1,1]
dat2[235,1]
tail(dat2)
dat2 <- read.csv("./q2data.csv", skip = 4, na.strings = "")
tail(dat2)
sum(is.na(dat2[326,]))
x <- rowSums(is.na(dat2))
summary(x)
table(x)
dat2 <- dat2[which(rowSums(is.na(dat2)) %in% c(5, 6),]
dat2 <- dat2[which(rowSums(is.na(dat2)) %in% c(5, 6)),]
head(dat2)
tail(dat2)
dat2$X.4 <- as.numeric((gsub(",", "", dat2$X.4)))
sum(dat2$X.4)/190
grep("^United", dat2[4])
dat2[1,4]
grep("^United", dat2[,4])
grep("^United", dat2[,4], value = T)
q4url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(q4url, destilfe = "./q4data.csv", method = "curl")
download.file(q4url, destfile = "./q4data.csv", method = "curl")
dat4 <- read.csv("q4data.csv")
head(dat4)
colnames(dat4)
dat4[1,]
dat4[,10]
head(dat2)
head(dat4)
x <- merge(dat4, dat2, 1, 1)
x <- merge(dat4, dat2, 31, 4)
x <- merge(dat4, dat2, by.x = 31, by.y = 4)
x <- merge(dat4, dat2, 1, 1)
x[1,1]
x[,1] %in% dat2[,1]
dat2[,1] %in% x[,1]
q4df <- merge(dat4, dat2, 1, 1)
colnames(q4df)
y <- grep("*June*", q4df)
y
y <- grep("*June*", q4df[,10])
y
length(y)
q4df[9,10]
q4df[9,16]
q4df[9,29]
q4df[16,10]
q4df[16,10]
amz = getSymbols("AMZN", auto.assign = F)
library(quantmod)
amz = getSymbols("AMZN", auto.assign = F)
sampleTimes = index(amz)
head(amz)
amz["2012"]
length(amz["2012"])
dim(amz["2012"])
length(amz["2012"])
x <- amz["2012"]
yr2012 <- amz["2012"]
head(weekdays(index(yr2012)))
yr2012$date <- weekdays(index(yr2012))
table(yr2012$date)
amz[1,]
amz[1,1]
index(amz[1,])
table(weekdays(index(yr2012)))
q4url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(q4url, destfile = "./q4data.csv", method = "curl")
dat4 <- read.csv("q4data.csv")
head(dat4)
head(dat2)
q4df <- merge(dat4, dat2, 31, 4)
q4df <- merge(dat4, dat2, by.x = 31, by.y = 4)
head(q4df)
y <- grep("*June*", q4df[,10])
head(q4df[,10])
colnames(q4df)
y <- grep("*June*", q4df[,11])
y
length(y)
q4df[y,10]
q4df[y,11]
y <- grep("^Fiscal year end: June", q4df[,11])
y
length(y)
q4df <- merge(dat4, dat2, 1, 1)
y <- grep("^Fiscal year end: June", q4df[,11])
colnames(q4df)
y <- grep("^Fiscal year end: June", q4df[,10])
y
length(sampleTimes)
length(sampleTimes["2012"])
class(sampleTimes)
length(sampleTimes > "2012")
head(sampleTimes)
head(sampleTimes > "2012")
head(amz["2012"])
length(amz["2012"])
dim(amz["2012"])
matrix(1:9, nrow = 3)
length(matrix(1:9, nrow = 3))
format(sampleTimes[1], format = "%Y")
sum(format(sampleTimes, format = "%Y") == "2012")
head(ES5)
x <- "Volume"
head(ES5[,eval(quote(x))])
quote(1)
class(quote(1))
class(quote("hello world"))
quote("hello world"))
quote("hello world")
eval("x")
eval(x)
ES5[,eval(x)]
ES5[,eval(x, "Return")]
head(ES5)
y <- "Return"
ES5[,eval(x, y)]
head(ES5[,eval(c(x, y))])
head(ES5[,eval(c(x, "Return"))])
eval(paste("ES5$", x, sep =""))
head(get((paste("ES5$", x, sep =""))))
backdates <- seq(Sys.Date(), length = (121), by = "-1 months")
head(backdates)
options("stringsAsFactors")
library(quantmod)
library(ggplot2)
s1 <- "^GSPC"
backdates <- seq(Sys.Date(), length = (121), by = "-1 months")
assign("ES", getSymbols(s1, src = "yahoo", auto.assign = F))
head(ES)
colnames(ES) <- c("Open", "High", "Low", "Close", " Volume", "Adjusted")
head(ES)
ES$Return <- log(ES$Adjusted/lag(ES$Adjusted, 1))
head(ES)
1:10/5
timeframe <- data.frame(months = 1:120, years = floor(1:120/5))
timeframe
timeframe <- data.frame(months = 1:120, years = round(1:120/5))
timeframe
timeframe <- data.frame(months = 1:120, years = 1:120/5)
timeframe
timeframe <- data.frame(months = 1:120, years = 1:120/12)
timeframe
head(ES)
colnames(ES) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted")
assign("ES", getSymbols(s1, src = "yahoo", auto.assign = F))
colnames(ES) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted")
ES$Return <- log(ES$Adjusted/lag(ES$Adjusted, 1))
head(ES)
ES$VolReturn <- ES$Volume/ES$Return
head(ES)
ES$VolReturn <- ES$Volume/abs(ES$Return)
head(ES)
acf <- acf(ES5$VolReturn, lag.max = 10, na.action = na.pass)
acf <- acf(ES$VolReturn, lag.max = 10, na.action = na.pass)
acf <- acf(ES$VolReturn, lag.max = 10, na.action = na.pass)
summary(ES$VolReturn)
summary(ES$Return)
length(ES$Return == 0)
sum(ES$Return == 0)
sum(ES$Return == 0, na.rm = T)
which(ES$Return == 0)
which(ES$Volume == 0)
which(ES$VolReturn == Inf)
ES$VolReturn[which(ES$VolReturn == Inf)]
ES$VolReturn[which(ES$VolReturn == Inf)] == NA
ES$VolReturn[which(ES$VolReturn == Inf)] <- NA
which(ES$VolReturn == Inf)
acf <- acf(ES$VolReturn, lag.max = 10, na.action = na.pass)
backdates[12*5]
ES5 <- ES[index(ES) > backdates[12*5 + 1]]
acf <- acf(ES5$VolReturn, lag.max = 10, na.action = na.pass)
acf <- acf(ES5$VolReturn, lag.max = 3, na.action = na.pass)
pacf <- pacf(ES5$VolReturn, lag.max = 3, na.action = na.pass)
plot(ES5$VolReturn, type = "p")
summary(ES5$VolReturn)
plot(ES5$VolReturn/mean(ES5$Volume), type = "p")
ES$VolReturn <- ES$Volume/ES$Return
ES$VolReturn[which(ES$VolReturn == Inf)] <- NA
ES5 <- ES[index(ES) > backdates[12*5 + 1]]
acf <- acf(ES5$VolReturn, lag.max = 3, na.action = na.pass)
pacf <- pacf(ES5$VolReturn, lag.max = 3, na.action = na.pass)
Box.test(btest[,2], lag = 2, type = 'Ljung')
library(quantmod)
library(ggplot2)
s1 <- "SPY"
timeframe <- data.frame(months = 1:120, years = 1:120/12)
backdates <- seq(Sys.Date(), length = (121), by = "-1 months")
assign("SPY", getSymbols(s1, src = "yahoo", auto.assign = F))
colnames(ES) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted")
ES$Return <- log(ES$Adjusted/lag(ES$Adjusted, 1))
s1 <- "SPY"
timeframe <- data.frame(months = 1:120, years = 1:120/12)
backdates <- seq(Sys.Date(), length = (121), by = "-1 months")
assign("ES", getSymbols(s1, src = "yahoo", auto.assign = F))
colnames(ES) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted")
ES$Return <- log(ES$Adjusted/lag(ES$Adjusted, 1))
plot(ES$Return, type = "p", pcx = ".")
ES5 <- ES[index(ES) > backdates[12*5 + 1]]
warnings()
plot(ES5$Return)
mean(ES5$Return)
sd(ES5$Return)
confint(ES5$Return)

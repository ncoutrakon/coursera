str(msdf)
library(reshape2)
head(colnames(msdf))
avedf <- melt(msdf, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2)]))
avedf <- melt(msdf, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2)])
avedf <- melt(msdf, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
dim(avedf)
head(avedf)
avedf <- dcast(avedf, ID + Activity + variable ~ value, mean)
avedf <- dcast(avedf, ID + Activity ~ variable, mean)
dim(avedf)
head(avedf)
head(avedf, n= 10)
dim(avedf)
write.table(avedf, file = "tidydata.txt", row.names = F)
str(df)
any(is.na(df))
summary(df)
head(avedf)
colnames(avedf)
head(features[,2])
y <- head(features[,2])
grep("mean", y)
grep("mean()", y)
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,mindex], df[,stdindex])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
avedf <- melt(msdf, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(avedf, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,mindex], df[,stdindex])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(avedf, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,mindex], df[,stdindex])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
head(avedf[,2])
head(names(avedf))
mindex
midex + 2
mindex + 2
names(df)
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
df[1, 4 +3]
df[1, 7]
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
union(mindex,stdindex)
intersect(mindex,stdindex)
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
df <- rbind(traindf, testdf)
head(df)
colnames(df) <- c("ID", "Activity", features[,2])
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
adf <- cbind(df[,mindex + 2], df[,stdindex + 2])
df <- cbind(df[,mindex + 2], df[,stdindex + 2])
df[,2] <- factor(df[,2], 1:6, activity[,2])
colnames(df)
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,1:2],df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
colnames(avedf)
length(mindex)
mindex <- grep("mean()", features[,2], fixed = F)
length(mindex)
intersection(colnames(avedf), colnames(avedf))
intersect(colnames(avedf), colnames(avedf))
unique(colnames(avedf))
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("^mean()$", features[,2])
stdindex <- grep("^std()$", features[,2])
df <- cbind(df[,1:2],df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
mindex <- grep("^mean()$", features[,2])
mindex
mindex <- grep("-mean()$", features[,2])
stdindex <- grep("-std()$", features[,2])
df <- cbind(df[,1:2],df[,mindex + 2], df[,stdindex + 2])
df[,2] <- factor(df[,2], 1:6, activity[,2])
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("-mean()$", features[,2])
stdindex <- grep("-std()$", features[,2])
df <- cbind(df[,1:2],df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
mindex <- grep("mean()$", features[,2])
mindex <- grep("\\bmean()\\b", features[,2])
stdindex <- grep("\\bstd()\\b", features[,2])
stdindex <- grep("\^std()\$", features[,2])
stdindex <- grep("std()", features[,2])
mindex <- grep("\\bmean()\\b", features[,2])
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean()", features[,2])
stdindex <- grep("std()", features[,2])
df <- cbind(df[,1:2],df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
mindex <- grep("^mean()", features[,2])
mindex <- grep("mean()", features[,2])
mindex <- grep("mean()$", features[,2])
features[,2]
mindex <- grep("-mean()", features[,2])
grep("mean()", "applemean()")
grep("mean()", "applemean-()")
grep("mean()$", "applemean()")
grep("*mean()$", "applemean()")
grep("[m]", "applemean()")
grep("[mean()]", "applemean()")
grep("[mean-()]", "applemean()")
grep("mean-()", "applemean()")
grep("mean()", "applemean()")
grep("mean(", "applemean()")
grep("mean\(", "applemean()")
grep("mean'('", "applemean()")
grep("mean$", "applemean()")
grep("mean()", "applemean()")
grep("mean()$", "applemean()")
grep("mean\\(\\)$", "applemean()")
mindex <- grep("mean\\(\\)$", features[,2])
mindex <- grep("mean\\(\\)", features[,2])
stdindex <- grep("std\\(\\)$", features[,2])
stdindex <- grep("std\\(\\)", features[,2])
library(reshape2)
options(stringsAsFactors = F)
setwd("./coursera-getting-and-cleaning-data/UCI HAR Dataset")
types <- c("test", "train")
activity <- read.table("activity_labels.txt")
features <- read.table("features.txt")
#Reads all tables in train and in test folders and assigns them to a unique variable of the same name
#creates two character vectors which contains the names of each variable, one for test data and one for train data
for (j in types){
jname <- paste(j,"names",sep="")
assign(jname, character())
for (i in list.files(paste("./",j, sep = ""), "*.txt")){
x <- basename(i)
assign(substr(x, 1, nchar(x) - 4),
read.table(paste("./", j,"/", i, sep = "")))
assign(jname, c(get(jname), substr(x, 1, nchar(x) - 4)))
}
}
#for the datasets pertaining to trainning set and the testing set, it creates two dataframes
#the first column contains the trial ID number, the second number contains the Activity, and the last 561 columns
#contain the summary data for each participant
for (j in types){
jname <- get(paste(j,"names",sep=""))
assign(paste(j, "df", sep=""), cbind(get(jname[1]), get(jname[3]), get(jname[2])))
}
#combines the testing and trainning datasets into one dataframe and names the columns accordingly
df <- rbind(traindf, testdf)
colnames(df) <- c("ID", "Activity", features[,2])
#pickout which variables are related to the mean and the stdev and
mindex <- grep("mean\\(\\)", features[,2])
stdindex <- grep("std\\(\\)", features[,2])
df <- cbind(df[,1:2],df[,mindex + 2], df[,stdindex + 2])
#replaces descriptors for the Activity column
df[,2] <- factor(df[,2], 1:6, activity[,2])
#create a new df, avedf, which for each subject and each activity, includes the average
#value for each specific feature
df <- melt(df, id.vars = c("ID", "Activity"), measure.vars = c(-1,-2))
avedf <- dcast(df, ID + Activity ~ variable, mean)
#code to export tidy data and include information for the codebook
write.table(avedf, file = "tidydata.txt", row.names = F)
write.csv(avedf, file = "tidydata.csv", row.names = F)
